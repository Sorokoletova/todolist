name: Build and deploy action
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t tsorokoletova/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push tsorokoletova/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    env:
      DB_PASSWORD: ${{ secrets.PASSWORD_DB }}
      DB_USER: ${{ secrets.USER_DB }}
      DB_NAME: ${{ secrets.NAME_DB }}
    steps:
      - name: clone
        uses: actions/checkout@v2
      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
#          cat config-ci.py | envsubst > deploy/config.py
      - name: copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/docker-compose.yaml"
          target: "flask-app-ci"
          strip_components: 1
      - name: run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd flask-app-ci
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d
            
